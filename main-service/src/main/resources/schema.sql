DROP TABLE IF EXISTS USERS, CATEGORIES, LOCATIONS, EVENTS, REQUESTS, COMPILATIONS, COMPILATIONS_EVENTS;

CREATE TABLE IF NOT EXISTS CATEGORIES
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(50) UNIQUE                      NOT NULL,
    CONSTRAINT pk_category PRIMARY KEY (id)
);

create table if not exists USERS
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    email VARCHAR(254) UNIQUE                     NOT NULL,
    name  VARCHAR(250)                            NOT NULL,
    CONSTRAINT pk_users PRIMARY KEY (id)
);

create table if not exists LOCATIONS
(
    id  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    lat FLOAT                                   NOT NULL,
    lon FLOAT                                   NOT NULL,
    CONSTRAINT pk_locations PRIMARY KEY (id)
);

create table if not exists EVENTS
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    annotation         VARCHAR,
    category           BIGINT
        references CATEGORIES
            on delete restrict,
    confirmed_requests BIGINT,
    created_on         TIMESTAMP WITHOUT TIME ZONE,
    description        VARCHAR,
    event_date         TIMESTAMP WITHOUT TIME ZONE,
    initiator          BIGINT
        references USERS
            on delete cascade,
    location           BIGINT
        references LOCATIONS
            on delete cascade,
    paid               BOOLEAN,
    participant_limit  BIGINT,
    published_on       TIMESTAMP WITHOUT TIME ZONE,
    request_moderation BOOLEAN,
    state              VARCHAR,
    title             VARCHAR,
    views              BIGINT,
    CONSTRAINT pk_events PRIMARY KEY (id)
);

create table if not exists REQUESTS
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created   TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    event     BIGINT                                  NOT NULL
        references EVENTS
            on delete cascade,
    requester BIGINT                                  NOT NULL
        references USERS
            on delete cascade,
    status    VARCHAR                                 NOT NULL,
    CONSTRAINT pk_requests PRIMARY KEY (id)
);

create table if not exists COMPILATIONS
(
    id     BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    pinned BOOLEAN                                 NOT NULL,
    title VARCHAR                                 NOT NULL,
    CONSTRAINT pk_compilations PRIMARY KEY (id)
);

create table if not exists COMPILATIONS_EVENTS
(
    compilation_id BIGINT NOT NULL
        references COMPILATIONS
            on delete cascade,
    event_id       BIGINT NOT NULL
        references EVENTS on delete cascade
);

